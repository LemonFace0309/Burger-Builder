{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","shared/checkValidity.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","classes","CheckoutSummary","stlye","width","margin","Burger","ingredients","Button","clicked","checkoutContinued","btnType","checkoutCancelled","Name","orderHandler","e","preventDefault","formData","key","state","orderForm","value","order","userId","price","totalPrice","orderData","onPurchaseBurger","token","inputChangedHandler","updatedOrderForm","updatedFormEl","target","valid","checkValidity","validation","touched","formIsValid","Object","keys","reduce","acc","setState","formField","elType","elConfig","type","placeholder","required","usersName","street","postalCode","country","email","deliveryMethod","options","displayValue","name","formElsArray","this","map","formEl","Input","invalid","changed","form","onSubmit","disabled","loading","Spinner","ContactData","Component","connect","burgerBuilder","auth","dispatch","actionCreators","withErrorHandler","axios","Checkout","checkoutContinuedHandler","history","replace","checkoutCancelledHandler","goBack","summary","to","purchasedRedirect","purchased","push","path","match","url","component","withRouter","rules","trim","minLength","length","maxLength","isEmail","test","isNumeric","input","el","validationError","inputClasses","InputEl","Invalid","ValidationError","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.ca0fc9bf.chunk.js","sourcesContent":["import React from \"react\";\n\nimport classes from \"./CheckoutSummary.module.css\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\n\nconst checkoutSummary = (props) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>The Best Burger In The World!</h1>\n      <div stlye={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button clicked={props.checkoutContinued} btnType=\"Success\">\n        Continue\n      </Button>\n      <Button clicked={props.checkoutCancelled} btnType=\"Danger\">\n        Cancel\n      </Button>\n    </div>\n  );\n};\n\nexport default checkoutSummary;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport axios from '../../../axios'\nimport classes from './ContactData.module.css'\nimport checkValidity from '../../../shared/checkValidity'\nimport Button from '../../../components/UI/Button/Button'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actionCreators from '../../../store/actions/index'\n\nclass Name extends Component {\n  constructor() {\n    super()\n    const formField = {\n      elType: 'input',\n      elConfig: {\n        type: 'text',\n        placeholder: '',\n      },\n      value: '',\n      validation: {\n        required: true,\n      },\n      valid: false,\n      touched: false,\n    }\n    const usersName = { ...formField }\n    usersName.elConfig = {\n      type: 'text',\n      placeholder: 'Your Name',\n    }\n    const street = { ...formField }\n    street.elConfig = {\n      type: 'text',\n      placeholder: 'Street',\n    }\n    const postalCode = { ...formField }\n    postalCode.elConfig = {\n      type: 'text',\n      placeholder: 'Postal Code',\n    }\n    const country = { ...formField }\n    country.elConfig = {\n      type: 'text',\n      placeholder: 'Country',\n    }\n    const email = { ...formField }\n    email.elConfig = {\n      type: 'text',\n      placeholder: 'Email',\n    }\n    const deliveryMethod = { ...formField }\n    deliveryMethod.elType = 'select'\n    deliveryMethod.elConfig = {\n      options: [\n        { value: 'fastest', displayValue: 'Fastest' },\n        { value: 'poor', displayValue: 'Poor' },\n      ],\n    }\n    deliveryMethod.value = \"fastest\"\n    deliveryMethod.valid = true\n\n    this.state = {\n      orderForm: {\n        name: usersName,\n        street: street,\n        postalCode: postalCode,\n        country: country,\n        email: email,\n        deliveryMethod: deliveryMethod,\n      },\n      formIsValid: false,\n    }\n  }\n\n  orderHandler = (e) => {\n    e.preventDefault()\n    const formData = {}\n    for (let key in this.state.orderForm) {\n      formData[key] = this.state.orderForm[key].value\n    }\n    const order = {\n      userId: this.props.userId,\n      ingredients: this.props.ingredients,\n      price: this.props.totalPrice,\n      // do not sent price data like this in production. Calculate total price on server;\n      // user may try to modify totalPrice before request is sent.\n      orderData: formData,\n    }\n    this.props.onPurchaseBurger(order, this.props.token)\n  }\n\n  inputChangedHandler = (e, key) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm,\n    }\n    const updatedFormEl = { ...updatedOrderForm[key] }\n    updatedFormEl.value = e.target.value\n    updatedFormEl.valid = checkValidity(\n      updatedFormEl.value,\n      updatedFormEl.validation,\n    )\n    updatedFormEl.touched = true\n    updatedOrderForm[key] = updatedFormEl\n\n    let formIsValid = Object.keys(updatedOrderForm).reduce((acc, key) => {\n      return acc && updatedOrderForm[key].valid\n    }, true)\n\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid })\n  }\n\n  render() {\n    const formElsArray = Object.keys(this.state.orderForm).map((key) => {\n      const formEl = this.state.orderForm[key]\n      return (\n        <Input\n          key={key}\n          elType={formEl.elType}\n          elConfig={formEl.elConfig}\n          value={formEl.value}\n          invalid={!formEl.valid}\n          touched={formEl.touched}\n          changed={(e) => this.inputChangedHandler(e, key)}\n        />\n      )\n    })\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElsArray}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n      </form>\n    )\n    if (this.props.loading) {\n      form = <Spinner />\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Information</h4>\n        {form}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPurchaseBurger: (orderData, token) => dispatch(actionCreators.purchaseBurger(orderData, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Name, axios))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect, withRouter } from 'react-router-dom'\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData'\n\nclass Checkout extends Component {\n\n  // componentDidMount() {\n  //   console.log(this.props)\n  //   const query = new URLSearchParams(this.props.location.search)\n  //   const ingredients = {}\n  //   let price = 0\n  //   for (let param of query.entries()) {\n  //     if (param[0] === 'price') {\n  //       price = param[1]\n  //     } else {\n  //       // ['meat', 1]\n  //       ingredients[param[0]] = +param[1]\n  //     }\n  //   }\n  //   this.setState({ ingredients: ingredients, totalPrice: price })\n  // }\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data')\n  }\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack()\n  }\n\n  render() {\n    let summary = <Redirect to=\"/\" />\n    if (this.props.ingredients) { \n      const purchasedRedirect = this.props.purchased ? this.props.history.push('/') : null\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={this.props.ingredients}\n            checkoutContinued={this.checkoutContinuedHandler}\n            checkoutCancelled={this.checkoutCancelledHandler}\n          />\n          <Route\n            path={this.props.match.url + '/contact-data'}\n            component={ContactData}\n            // render={(props) => (\n            //   <ContactData\n            //     ingredients={this.props.ingredients}\n            //     totalPrice={this.props.totalPrice}\n            //     {...props}\n            //   />\n            // )}\n          />\n        </div>\n      )\n    }\n    return summary\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased,\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Checkout))\n","const checkValidity = (value, rules) => {\n  if (rules.required && value.trim() === '') {\n    return false\n  }\n\n  if (rules.minLength && value.length < rules.minLength) {\n    return false\n  }\n\n  if (rules.maxLength && value.length > rules.maxLength) {\n    return false\n  }\n\n  const emailPattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n  if (rules.isEmail && !emailPattern.test(value)) {\n    return false\n  }\n\n  const numericPatter = /^\\d+$/\n  if (rules.isNumeric && !numericPatter.test(value)) {\n    return false\n  }\n\n  return true\n}\n\nexport default checkValidity\n","import React from 'react'\n\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n  let el = null\n  let validationError = null\n  const inputClasses = [classes.InputEl]\n\n  if (props.invalid && props.touched) {\n    inputClasses.push(classes.Invalid)\n    validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>\n  }\n\n  switch (props.elType) {\n    case 'input':\n      el = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n      break\n    case 'textarea':\n      el = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n      break\n    case 'select':\n      el = (\n        <select\n          className={inputClasses.join(' ')}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elConfig.options.map((option) => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.displayValue}\n              </option>\n            )\n          })}\n        </select>\n      )\n      break\n    default:\n      el = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {el}\n      {validationError}\n    </div>\n  )\n}\n\nexport default input\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputEl\":\"Input_InputEl__2MIlF\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};"],"sourceRoot":""}