{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","Object","keys","map","key","style","textTransform","display","margin","border","padding","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actionCreators","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,4HCiCXC,EA9BD,SAACC,GACb,IAAMC,EAAcC,OAAOC,KAAKH,EAAMC,aAAaG,KAAI,SAACC,GACtD,OACE,uBACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OANb,UASG,IACAN,EAAM,KAAOL,EAAMC,YAAYI,GAAO,IAAK,UAKlD,OACE,sBAAKO,UAAWC,IAAQC,MAAxB,UACE,8CACe,iCAASb,OAExB,wCACS,0CAAac,OAAOC,WAAWhB,EAAMiB,OAAOC,QAAQ,a,wBCnB7DC,E,kLAEFC,KAAKpB,MAAMqB,cAAcD,KAAKpB,MAAMsB,MAAOF,KAAKpB,MAAMuB,U,+BAItD,IAAIC,EAAS,cAACC,EAAA,EAAD,IAgBb,OAfKL,KAAKpB,MAAM0B,UACdF,EACE,8BACCJ,KAAKpB,MAAMwB,OAAOpB,KAAI,SAACL,GACtB,OACE,cAACe,EAAD,CAEEb,YAAaF,EAAME,YACnBgB,MAAOlB,EAAMkB,OAFRlB,EAAM4B,UASdH,M,GAtBUI,aAyCNC,uBAfS,SAACC,GACvB,MAAO,CACLN,OAAQM,EAAM/B,MAAMyB,OACpBE,QAASI,EAAM/B,MAAM2B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAII,SAACS,GAC1B,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAA2BX,EAAOC,QAIlEM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.b6fe337e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react'\n\nimport classes from './Order.module.css'\n\nconst order = (props) => {\n  const ingredients = Object.keys(props.ingredients).map((key) => {\n    return (\n      <span\n        style={{\n          textTransform: 'capitalize',\n          display: 'inline-block',\n          margin: '0 5px',\n          border: '1px solid #ccc',\n          padding: '5px',\n        }}\n      >\n        {' '}\n        {key + ' (' + props.ingredients[key] + ')'}{' '}\n      </span>\n    )\n  })\n\n  return (\n    <div className={classes.Order}>\n      <p>\n        Ingredients: <strong>{ingredients}</strong>\n      </p>\n      <p>\n        Price: <strong>CAD${Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  )\n}\n\nexport default order\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport axios from '../../axios'\nimport Order from '../../components/Order/Order'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actionCreators from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId)\n  }\n\n  render() {\n    let orders = <Spinner />\n    if (!this.props.loading) {\n      orders = (\n        <div>\n        {this.props.orders.map((order) => {\n          return (\n            <Order\n              key={order.id}\n              ingredients={order.ingredients}\n              price={order.price}\n            />\n          )\n        })}\n      </div>\n      )\n    }\n    return orders\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actionCreators.fetchOrders(token, userId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))\n"],"sourceRoot":""}