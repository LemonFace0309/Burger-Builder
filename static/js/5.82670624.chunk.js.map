{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","Object","keys","map","key","style","textTransform","display","margin","border","padding","className","classes","Order","Number","parseFloat","price","toFixed","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actionCreators","withErrorHandler","useEffect","Spinner","id","axios","module","exports"],"mappings":"iLAkCeA,EA9BD,SAACC,GACb,IAAMC,EAAcC,OAAOC,KAAKH,EAAMC,aAAaG,KAAI,SAACC,GACtD,OACE,sBAEEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAPb,SAUGN,EAAM,KAAOL,EAAMC,YAAYI,GAAO,KATlCA,MAcX,OACE,sBAAKO,UAAWC,IAAQC,MAAxB,UACE,8CACe,iCAASb,OAExB,wCACS,0CAAac,OAAOC,WAAWhB,EAAMiB,OAAOC,QAAQ,a,wBCuBpDC,uBAhBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMrB,MAAMsB,OACpBC,QAASF,EAAMrB,MAAMuB,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAA2BL,EAAOE,QAIlCN,CAGbU,aA7Ca,SAAC7B,GAAW,IACjB2B,EAAiC3B,EAAjC2B,cAAeJ,EAAkBvB,EAAlBuB,MAAOE,EAAWzB,EAAXyB,OAE9BK,qBAAU,WACRH,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIJ,EAAS,cAACU,EAAA,EAAD,IAgBb,OAfK/B,EAAMsB,UACTD,EACE,8BACGrB,EAAMqB,OAAOjB,KAAI,SAACL,GACjB,OACE,cAACe,EAAD,CAEEb,YAAaF,EAAME,YACnBgB,MAAOlB,EAAMkB,OAFRlB,EAAMiC,UAShBX,IAsBkBY,O,mBCrD3BC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.82670624.chunk.js","sourcesContent":["import React from 'react'\n\nimport classes from './Order.module.css'\n\nconst order = (props) => {\n  const ingredients = Object.keys(props.ingredients).map((key) => {\n    return (\n      <span\n        key={key}\n        style={{\n          textTransform: 'capitalize',\n          display: 'inline-block',\n          margin: '0 5px',\n          border: '1px solid #ccc',\n          padding: '5px',\n        }}\n      >\n        {key + ' (' + props.ingredients[key] + ')'}\n      </span>\n    )\n  })\n\n  return (\n    <div className={classes.Order}>\n      <p>\n        Ingredients: <strong>{ingredients}</strong>\n      </p>\n      <p>\n        Price: <strong>CAD${Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  )\n}\n\nexport default order\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport axios from '../../axios'\nimport Order from '../../components/Order/Order'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actionCreators from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nconst Orders = (props) => {\n  const { onFetchOrders, token, userId } = props\n\n  useEffect(() => {\n    onFetchOrders(token, userId)\n  }, [onFetchOrders, token, userId])\n\n  let orders = <Spinner />\n  if (!props.loading) {\n    orders = (\n      <div>\n        {props.orders.map((order) => {\n          return (\n            <Order\n              key={order.id}\n              ingredients={order.ingredients}\n              price={order.price}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n  return orders\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actionCreators.fetchOrders(token, userId)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withErrorHandler(Orders, axios))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};"],"sourceRoot":""}