{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","shared/checkValidity.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["checkoutSummary","props","className","classes","CheckoutSummary","stlye","width","margin","Burger","ingredients","Button","clicked","checkoutContinued","btnType","checkoutCancelled","connect","state","burgerBuilder","totalPrice","loading","order","token","auth","userId","dispatch","onPurchaseBurger","orderData","actionCreators","withErrorHandler","formField","elType","elConfig","type","placeholder","value","validation","required","valid","touched","usersName","street","postalCode","country","email","deliveryMethod","options","displayValue","useState","name","orderForm","setOrderForm","formIsValid","setFormIsValid","formElsArray","Object","keys","map","key","formEl","Input","invalid","changed","e","updatedOrderForm","updatedFormEl","target","checkValidity","reduce","acc","inputChangedHandler","form","onSubmit","preventDefault","formData","price","disabled","Spinner","ContactData","axios","withRouter","purchased","summary","to","purchasedRedirect","history","push","replace","goBack","path","match","url","component","rules","trim","minLength","length","maxLength","isEmail","test","isNumeric","input","el","validationError","inputClasses","InputEl","Invalid","ValidationError","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.8907275a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport classes from \"./CheckoutSummary.module.css\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\n\nconst checkoutSummary = (props) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>The Best Burger In The World!</h1>\n      <div stlye={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button clicked={props.checkoutContinued} btnType=\"Success\">\n        Continue\n      </Button>\n      <Button clicked={props.checkoutCancelled} btnType=\"Danger\">\n        Cancel\n      </Button>\n    </div>\n  );\n};\n\nexport default checkoutSummary;\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport axios from '../../../axios'\nimport classes from './ContactData.module.css'\nimport checkValidity from '../../../shared/checkValidity'\nimport Button from '../../../components/UI/Button/Button'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actionCreators from '../../../store/actions/index'\n\nconst ContactData = (props) => {\n  const formField = {\n    elType: 'input',\n    elConfig: {\n      type: 'text',\n      placeholder: '',\n    },\n    value: '',\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  }\n  const usersName = { ...formField }\n  usersName.elConfig = {\n    type: 'text',\n    placeholder: 'Your Name',\n  }\n  const street = { ...formField }\n  street.elConfig = {\n    type: 'text',\n    placeholder: 'Street',\n  }\n  const postalCode = { ...formField }\n  postalCode.elConfig = {\n    type: 'text',\n    placeholder: 'Postal Code',\n  }\n  const country = { ...formField }\n  country.elConfig = {\n    type: 'text',\n    placeholder: 'Country',\n  }\n  const email = { ...formField }\n  email.elConfig = {\n    type: 'text',\n    placeholder: 'Email',\n  }\n  const deliveryMethod = { ...formField }\n  deliveryMethod.elType = 'select'\n  deliveryMethod.elConfig = {\n    options: [\n      { value: 'fastest', displayValue: 'Fastest' },\n      { value: 'poor', displayValue: 'Poor' },\n    ],\n  }\n  deliveryMethod.value = 'fastest'\n  deliveryMethod.valid = true\n\n  const [orderForm, setOrderForm] = useState({\n    name: usersName,\n    street: street,\n    postalCode: postalCode,\n    country: country,\n    email: email,\n    deliveryMethod: deliveryMethod,\n  })\n\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  const orderHandler = (e) => {\n    e.preventDefault()\n    const formData = {}\n    for (let key in orderForm) {\n      formData[key] = orderForm[key].value\n    }\n    const order = {\n      userId: props.userId,\n      ingredients: props.ingredients,\n      price: props.totalPrice,\n      // do not sent price data like this in production. Calculate total price on server;\n      // user may try to modify totalPrice before request is sent.\n      orderData: formData,\n    }\n    props.onPurchaseBurger(order, props.token)\n  }\n\n  const inputChangedHandler = (e, key) => {\n    const updatedOrderForm = {\n      ...orderForm,\n    }\n    const updatedFormEl = { ...updatedOrderForm[key] }\n    updatedFormEl.value = e.target.value\n    updatedFormEl.valid = checkValidity(\n      updatedFormEl.value,\n      updatedFormEl.validation,\n    )\n    updatedFormEl.touched = true\n    updatedOrderForm[key] = updatedFormEl\n\n    let formIsValid = Object.keys(updatedOrderForm).reduce((acc, key) => {\n      return acc && updatedOrderForm[key].valid\n    }, true)\n\n    setOrderForm(updatedOrderForm)\n    setFormIsValid(formIsValid)\n  }\n\n  const formElsArray = Object.keys(orderForm).map((key) => {\n    const formEl = orderForm[key]\n    return (\n      <Input\n        key={key}\n        elType={formEl.elType}\n        elConfig={formEl.elConfig}\n        value={formEl.value}\n        invalid={!formEl.valid}\n        touched={formEl.touched}\n        changed={(e) => inputChangedHandler(e, key)}\n      />\n    )\n  })\n\n  let form = (\n    <form onSubmit={orderHandler}>\n      {formElsArray}\n      <Button btnType=\"Success\" disabled={!formIsValid}>\n        ORDER\n      </Button>\n    </form>\n  )\n  if (props.loading) {\n    form = <Spinner />\n  }\n  return (\n    <div className={classes.ContactData}>\n      <h4>Enter your Contact Information</h4>\n      {form}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPurchaseBurger: (orderData, token) =>\n      dispatch(actionCreators.purchaseBurger(orderData, token)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withErrorHandler(ContactData, axios))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect, withRouter } from 'react-router-dom'\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData'\n\nconst Checkout = props => {\n\n  // componentDidMount() {\n  //   console.log(this.props)\n  //   const query = new URLSearchParams(this.props.location.search)\n  //   const ingredients = {}\n  //   let price = 0\n  //   for (let param of query.entries()) {\n  //     if (param[0] === 'price') {\n  //       price = param[1]\n  //     } else {\n  //       // ['meat', 1]\n  //       ingredients[param[0]] = +param[1]\n  //     }\n  //   }\n  //   this.setState({ ingredients: ingredients, totalPrice: price })\n  // }\n\n  const checkoutContinuedHandler = () => {\n    props.history.replace('/checkout/contact-data')\n  }\n\n  const checkoutCancelledHandler = () => {\n    props.history.goBack()\n  }\n\n    let summary = <Redirect to=\"/\" />\n    if (props.ingredients) { \n      const purchasedRedirect = props.purchased ? props.history.push('/') : null\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={props.ingredients}\n            checkoutContinued={checkoutContinuedHandler}\n            checkoutCancelled={checkoutCancelledHandler}\n          />\n          <Route\n            path={props.match.url + '/contact-data'}\n            component={ContactData}\n            // render={(props) => (\n            //   <ContactData\n            //     ingredients={this.props.ingredients}\n            //     totalPrice={this.props.totalPrice}\n            //     {...props}\n            //   />\n            // )}\n          />\n        </div>\n      )\n    }\n    return summary\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased,\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Checkout))\n","const checkValidity = (value, rules) => {\n  if (rules.required && value.trim() === '') {\n    return false\n  }\n\n  if (rules.minLength && value.length < rules.minLength) {\n    return false\n  }\n\n  if (rules.maxLength && value.length > rules.maxLength) {\n    return false\n  }\n\n  const emailPattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n  if (rules.isEmail && !emailPattern.test(value)) {\n    return false\n  }\n\n  const numericPatter = /^\\d+$/\n  if (rules.isNumeric && !numericPatter.test(value)) {\n    return false\n  }\n\n  return true\n}\n\nexport default checkValidity\n","import React from 'react'\n\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n  let el = null\n  let validationError = null\n  const inputClasses = [classes.InputEl]\n\n  if (props.invalid && props.touched) {\n    inputClasses.push(classes.Invalid)\n    validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>\n  }\n\n  switch (props.elType) {\n    case 'input':\n      el = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n      break\n    case 'textarea':\n      el = (\n        <textarea\n          className={inputClasses.join(' ')}\n          {...props.elConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n      break\n    case 'select':\n      el = (\n        <select\n          className={inputClasses.join(' ')}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elConfig.options.map((option) => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.displayValue}\n              </option>\n            )\n          })}\n        </select>\n      )\n      break\n    default:\n      el = (\n        <input\n          className={inputClasses.join(' ')}\n          {...props.elConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {el}\n      {validationError}\n    </div>\n  )\n}\n\nexport default input\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputEl\":\"Input_InputEl__2MIlF\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};"],"sourceRoot":""}